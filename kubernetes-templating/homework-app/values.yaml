# Default values for homework-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

createNamespace:
  create: false

replicaCount: 3
imagePullSecrets: []

initContainer:
  image:
    repository: busybox
    pullPolicy: IfNotPresent
    tag: latest
  args:
    - |
      echo "<html><body><h1>Homework!</h1></body></html>" > /init/index.html
      wget -O /init/metrics.html \
        --header="Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
        --no-check-certificate \
        https://kubernetes.default.svc/metrics

container:
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: alpine
  containerPort: 8000
  args:
    - |
      echo '
      server {
          listen 8000;
          server_name localhost;
          location / {
            root /homework;
            index index.html;
          }
          location /conf/ {
            alias /homework/conf/;
            autoindex on;
            autoindex_format html;
          }
          location /metrics {
            root /homework;
            index metrics.html;
          }
      }' > /etc/nginx/conf.d/default.conf;
      nginx -g "daemon off;"

configMap:
  file1: "1"
  file2: "2"

createStorageClass:
  create: true
  name: hostpath-sc
  provisioner: docker.io/hostpath
  reclaimPolicy: Retain

pvc:
  storageRequest: 10Gi
  storageClass: hostpath-sc

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: monitoring

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: homework.otus
      paths:
        - path: /
          pathType: Prefix
        - path: /conf/
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector:
  components: homework

readinessProbe:
  enabled: true
  config:
    httpGet:
      path: /index.html
      port: 8000
    initialDelaySeconds: 5
    periodSeconds: 5

lifecycle:
  enabled: true
  config:
    preStop:
      exec:
        command: ["/bin/sh", "-c", "rm -f /homework/index.html"]

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

tolerations: []

affinity: {}

redis:
  enabled: false
