apiVersion: apps/v1
kind: Deployment
metadata:
  name: homework-deployment
  namespace: homework
spec:
  replicas: 3
  selector:
    matchLabels:
      app: homework-pod
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: homework-pod
    spec:
      serviceAccountName: monitoring
      nodeSelector:
        homework: "true"
      volumes:
        - name: shared-data
          persistentVolumeClaim:
            claimName: homework-pvc 
        - name: config-volume
          configMap:
            name: homework-config 
      initContainers:
        - name: init-container
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "<html><body><h1>Homework!</h1></body></html>" > /init/index.html
              wget -O /init/metrics.html \
                --header="Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
                --no-check-certificate \
                https://kubernetes.docker.internal:6443/metrics
          volumeMounts:
            - name: shared-data
              mountPath: /init
      containers:
        - name: web-server
          image: nginx:alpine
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: shared-data
              mountPath: /homework
            - name: config-volume
              mountPath: /homework/conf 
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo '
              server {
                  listen 8000;
                  server_name localhost;
                  location / {
                    root /homework;
                    index index.html;
                  }
                  location /conf/ {
                    alias /homework/conf/;
                    autoindex on;
                    autoindex_format html;
                  }
                  location /metrics {
                    root /homework;
                    index metrics.html;
                  }
              }' > /etc/nginx/conf.d/default.conf;
              nginx -g "daemon off;"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -f /homework/index.html"]
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5